/*
 * bug_3185.cpp
 *
 *  Created on: Aug 26, 2020
 *      Author: cady
 */
#include <sstream>
#include "yaml_data.hpp"


std::string test_data::bug_3185_with_invalid_frame()
{
    std::stringstream ss;
    ss << "rotations convention: [psi, theta', phi'']\n"
       << "\n"
       << "environmental constants:\n"
       << "    g: {value: 9.81, unit: m/s^2}\n"
       << "    rho: {value: 1026, unit: kg/m^3}\n"
       << "    nu: {value: 1.18e-6, unit: m^2/s}\n"
       << "environment models:\n"
       << "  - model: no waves\n"
       << "    constant sea elevation in NED frame: {value: 0, unit: m}\n"
       << "\n"
       << "# Fixed frame: NED\n"
       << "bodies: # All bodies have NED as parent frame\n"
       << "  - name: dtmb\n"
       << "    position of body frame relative to mesh:\n"
       << "        frame: mesh\n"
       << "        x: {value: 70.27, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -7.55, unit: m}\n"
       << "        phi: {value: 0, unit: rad}\n"
       << "        theta: {value: 0, unit: rad}\n"
       << "        psi: {value: 0, unit: rad}\n"
       << "    initial position of body frame relative to NED:\n"
       << "        frame: NED\n"
       << "        x: {value: 0, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -1.42, unit: m}\n"
       << "        phi: {value: 0, unit: deg}\n"
       << "        theta: {value: 0., unit: deg}\n"
       << "        psi: {value: 0, unit: deg}\n"
       << "    initial velocity of body frame relative to NED:\n"
       << "        frame: dtmb\n"
       << "        u: {value: 0, unit: kt}\n"
       << "        v: {value: 0, unit: m/s}\n"
       << "        w: {value: 0, unit: m/s}\n"
       << "        p: {value: 0, unit: rad/s}\n"
       << "        q: {value: 0, unit: rad/s}\n"
       << "        r: {value: 0, unit: rad/s}\n"
       << "    dynamics:\n"
       << "        hydrodynamic forces calculation point in body frame:\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 3.45, unit: m}\n"
       << "        centre of inertia:\n"
       << "            frame: dtmb\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 0, unit: m} \n"
       << "        mass: {value: 8569., unit: tonne} # Caution: 'ton' is the british ton which is 907.185 kg\n"
       << "        rigid body inertia matrix at the center of buoyancy projected in the body frame:\n"
       << "            frame: dtmb\n"
       << "            row 1: [8.569e6,0,0,0,0,0]\n"
       << "            row 2: [0,8.569e6,0,0,0,0]\n"
       << "            row 3: [0,0,8.569e6,0,0,0]\n"
       << "            row 4: [0,0,0,4.271e8,0,0]\n"
       << "            row 5: [0,0,0,0,1.080e10,0]\n"
       << "            row 6: [0,0,0,0,0,1.080e10]\n"
       << "        added mass matrix at the center of buoyancy projected in the body frame:\n"
       << "            frame: dtmb\n"
       << "            # T min Aqua+ (3.5s)\n"
       << "            row 1: [8.979E+04,  0.000E+00, 1.981E+05,  0.000E+00, 1.962E+07, 0.000E+00]\n"
       << "            row 2: [0.000E+00,  2.172E+06, 0.000E+00, -1.135E+06, 0.000E+00, 2.523E+07]\n"
       << "            row 3: [1.981E+05,  0.000E+00, 9.680E+06,  0.000E+00, 6.716E+07, 0.000E+00]\n"
       << "            row 4: [0.000E+00, -1.135E+06, 0.000E+00,  3.865E+07, 0.000E+00, 2.228E+08]\n"
       << "            row 5: [1.962E+07,  0.000E+00, 6.716E+07,  0.000E+00, 9.117E+09, 0.000E+00]\n"
       << "            row 6: [0.000E+00,  2.523E+07, 0.000E+00,  2.228E+08, 0.000E+00, 3.338E+09]\n"
       << "    controlled forces:\n"
       << "      - name: portside propeller\n"
       << "        model: wageningen B-series\n"
       << "        position of propeller frame:\n"
       << "            frame: toto\n"
       << "            x: {value: 0., unit: m}\n"
       << "            y: {value: 0., unit: m}\n"
       << "            z: {value: 0, unit: m}\n"
       << "            phi: {value: 0, unit: rad}\n"
       << "            theta: {value: 0., unit: deg}\n"
       << "            psi: {value: 0, unit: deg}\n"
       << "        wake coefficient w: 0.15\n"
       << "        relative rotative efficiency etaR: 1\n"
       << "        thrust deduction factor t: 0.12\n"
       << "        rotation: clockwise\n"
       << "        number of blades: 5\n"
       << "        blade area ratio AE/A0: 0.58\n"
       << "        diameter: {value: 6.15, unit: m}\n"
       << "output:\n"
       << "    - format: map\n"
       << "      data: [t, 'Fx(portside propeller,dtmb,dtmb)', 'Fy(portside propeller,dtmb,dtmb)', 'Fz(portside propeller,dtmb,dtmb)', 'Mx(portside propeller,dtmb,dtmb)', 'My(portside propeller,dtmb,dtmb)', 'Mz(portside propeller,dtmb,dtmb)']\n"
       << "commands:\n"
       << "    - name: portside propeller\n"
       << "      t: [0, 100]\n"
       << "      rpm: {unit: tr/s, values: [1.56, 1.56]}\n"
       << "      P/D: {unit: rad, values: [0.87, 0.87]}\n";
    return ss.str();
}

std::string test_data::bug_3185()
{
    std::stringstream ss;
    ss << "rotations convention: [psi, theta', phi'']\n"
       << "\n"
       << "environmental constants:\n"
       << "    g: {value: 9.81, unit: m/s^2}\n"
       << "    rho: {value: 1026, unit: kg/m^3}\n"
       << "    nu: {value: 1.18e-6, unit: m^2/s}\n"
       << "environment models:\n"
       << "  - model: no waves\n"
       << "    constant sea elevation in NED frame: {value: 0, unit: m}\n"
       << "\n"
       << "# Fixed frame: NED\n"
       << "bodies: # All bodies have NED as parent frame\n"
       << "  - name: dtmb\n"
       << "    position of body frame relative to mesh:\n"
       << "        frame: mesh\n"
       << "        x: {value: 70.27, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -7.55, unit: m}\n"
       << "        phi: {value: 0, unit: rad}\n"
       << "        theta: {value: 0, unit: rad}\n"
       << "        psi: {value: 0, unit: rad}\n"
       << "    initial position of body frame relative to NED:\n"
       << "        frame: NED\n"
       << "        x: {value: 0, unit: m}\n"
       << "        y: {value: 0, unit: m}\n"
       << "        z: {value: -1.42, unit: m}\n"
       << "        phi: {value: 0, unit: deg}\n"
       << "        theta: {value: 0., unit: deg}\n"
       << "        psi: {value: 0, unit: deg}\n"
       << "    initial velocity of body frame relative to NED:\n"
       << "        frame: dtmb\n"
       << "        u: {value: 0, unit: kt}\n"
       << "        v: {value: 0, unit: m/s}\n"
       << "        w: {value: 0, unit: m/s}\n"
       << "        p: {value: 0, unit: rad/s}\n"
       << "        q: {value: 0, unit: rad/s}\n"
       << "        r: {value: 0, unit: rad/s}\n"
       << "    dynamics:\n"
       << "        hydrodynamic forces calculation point in body frame:\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 3.45, unit: m}\n"
       << "        centre of inertia:\n"
       << "            frame: dtmb\n"
       << "            x: {value: 0, unit: m}\n"
       << "            y: {value: 0, unit: m}\n"
       << "            z: {value: 0, unit: m} \n"
       << "        mass: {value: 8569., unit: tonne} # Caution: 'ton' is the british ton which is 907.185 kg\n"
       << "        rigid body inertia matrix at the center of buoyancy projected in the body frame:\n"
       << "            frame: dtmb\n"
       << "            row 1: [8.569e6,0,0,0,0,0]\n"
       << "            row 2: [0,8.569e6,0,0,0,0]\n"
       << "            row 3: [0,0,8.569e6,0,0,0]\n"
       << "            row 4: [0,0,0,4.271e8,0,0]\n"
       << "            row 5: [0,0,0,0,1.080e10,0]\n"
       << "            row 6: [0,0,0,0,0,1.080e10]\n"
       << "        added mass matrix at the center of buoyancy projected in the body frame:\n"
       << "            frame: dtmb\n"
       << "            # T min Aqua+ (3.5s)\n"
       << "            row 1: [8.979E+04,  0.000E+00, 1.981E+05,  0.000E+00, 1.962E+07, 0.000E+00]\n"
       << "            row 2: [0.000E+00,  2.172E+06, 0.000E+00, -1.135E+06, 0.000E+00, 2.523E+07]\n"
       << "            row 3: [1.981E+05,  0.000E+00, 9.680E+06,  0.000E+00, 6.716E+07, 0.000E+00]\n"
       << "            row 4: [0.000E+00, -1.135E+06, 0.000E+00,  3.865E+07, 0.000E+00, 2.228E+08]\n"
       << "            row 5: [1.962E+07,  0.000E+00, 6.716E+07,  0.000E+00, 9.117E+09, 0.000E+00]\n"
       << "            row 6: [0.000E+00,  2.523E+07, 0.000E+00,  2.228E+08, 0.000E+00, 3.338E+09]\n"
       << "    controlled forces:\n"
       << "      - name: portside propeller\n"
       << "        model: wageningen B-series\n"
       << "        position of propeller frame:\n"
       << "            frame: dtmb\n"
       << "            x: {value: 1, unit: m}\n"
       << "            y: {value: 2, unit: m}\n"
       << "            z: {value: 3, unit: m}\n"
       << "            phi: {value: 60, unit: deg}\n"
       << "            theta: {value: 45, unit: deg}\n"
       << "            psi: {value: 30, unit: deg}\n"
       << "        wake coefficient w: 0.15\n"
       << "        relative rotative efficiency etaR: 1\n"
       << "        thrust deduction factor t: 0.12\n"
       << "        rotation: clockwise\n"
       << "        number of blades: 5\n"
       << "        blade area ratio AE/A0: 0.58\n"
       << "        diameter: {value: 6.15, unit: m}\n"
       << "output:\n"
       << "    - format: map\n"
       << "      data:\n"
       << "          - t\n"
       << "          - 'Fx(portside propeller,dtmb,dtmb)'\n"
       << "          - 'Fy(portside propeller,dtmb,dtmb)'\n"
       << "          - 'Fz(portside propeller,dtmb,dtmb)'\n"
       << "          - 'Mx(portside propeller,dtmb,dtmb)'\n"
       << "          - 'My(portside propeller,dtmb,dtmb)'\n"
       << "          - 'Mz(portside propeller,dtmb,dtmb)'\n"
       << "          - 'Fx(portside propeller,dtmb,NED)'\n"
       << "          - 'Fy(portside propeller,dtmb,NED)'\n"
       << "          - 'Fz(portside propeller,dtmb,NED)'\n"
       << "          - 'Mx(portside propeller,dtmb,NED)'\n"
       << "          - 'My(portside propeller,dtmb,NED)'\n"
       << "          - 'Mz(portside propeller,dtmb,NED)'\n"
       << "commands:\n"
       << "    - name: portside propeller\n"
       << "      t: [0, 100]\n"
       << "      rpm: {unit: tr/s, values: [1.56, 1.56]}\n"
       << "      P/D: {unit: rad, values: [0.87, 0.87]}\n";
    return ss.str();
}
