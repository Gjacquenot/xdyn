rotations convention: [psi, theta', phi'']

environmental constants:
    g: {value: 9.81, unit: m/s^2}
    rho: {value: 1025, unit: kg/m^3}
    nu: {value: 1.18e-6, unit: m^2/s}
environment models:
  - model: waves
    discretization:
       n: 1
       omega min: {value: 0.1, unit: rad/s}
       omega max: {value: 6, unit: rad/s}
       energy fraction: 0.999
    spectra:
      - model: airy
        depth: {value: 100, unit: m}
        seed of the random data generator: 0
        directional spreading:
           type: dirac
           waves propagating to: {value: 90, unit: deg}
        spectral density:
           type: dirac
           omega0: {value: 0.997079816, unit: rad/s}
           Hs: {value: 3.3, unit: m}
    output:
        frame of reference: NED
        mesh:
            xmin: {value: 1, unit: m}
            xmax: {value: 5, unit: m}
            nx: 0
            ymin: {value: 1, unit: m}
            ymax: {value: 2, unit: m}
            ny: 0
# Fixed frame: NED
bodies: # All bodies have NED as parent frame
  - name: Anthineas
    mesh: ../anthineas.stl
    position of body frame relative to mesh:
        frame: mesh
        x: {value: 9.355, unit: m}
        y: {value: 0, unit: m}
        z: {value: -3.21, unit: m}
        phi: {value: 0, unit: rad}
        theta: {value: 0, unit: rad}
        psi: {value: 0, unit: rad}
    initial position of body frame relative to NED:
        frame: NED
        x: {value: 0, unit: m}
        y: {value: 0, unit: m}
        z: {value: -0.099, unit: m}
        phi: {value: 0, unit: deg}
        theta: {value: -.334, unit: deg}
        psi: {value: 0, unit: deg}
    initial velocity of body frame relative to NED:
        frame: Anthineas
        u: {value: 0, unit: m/s}
        v: {value: 0, unit: m/s}
        w: {value: 0, unit: m/s}
        p: {value: 0, unit: rad/s}
        q: {value: 0, unit: rad/s}
        r: {value: 0, unit: rad/s}
    dynamics:
        hydrodynamic forces calculation point in body frame:
            x: {value: 0.696, unit: m}
            y: {value: 0, unit: m}
            z: {value: 1.418, unit: m}
        centre of inertia:
            frame: Anthineas
            x: {value: 0.258, unit: m}
            y: {value: 0, unit: m}
            z: {value: 0.432, unit: m}
        mass: {value: 253.31, unit: tonne} # Caution: 'ton' is the british ton which is 907.185 kg
        rigid body inertia matrix at the center of buoyancy projected in the body frame:
            frame: Anthineas
            row 1: [253310,0,0,0,0,0]
            row 2: [0,253310,0,0,0,0]
            row 3: [0,0,253310,0,0,0]
            row 4: [0,0,0,1.522e6,0,0]
            row 5: [0,0,0,0,8.279e6,0]
            row 6: [0,0,0,0,0,7.676e6]
        added mass matrix at the center of buoyancy projected in the body frame:
            frame: Anthineas
            row 1: [3.519e4,0,0,0,0,0]
            row 2: [0,3.023e5,0,0,0,0]
            row 3: [0,0,1.980e5,0,0,0]
            row 4: [0,0,0,3.189e5,0,0]
            row 5: [0,0,0,0,8.866e6,0]
            row 6: [0,0,0,0,0,6.676e6]
    external forces:
      - model: gravity
      - model: non-linear hydrostatic (fast)
      - model: non-linear Froude-Krylov
      - model: linear damping
        damping matrix at the center of gravity projected in the body frame:
            frame: Anthineas
            row 1: [ 0, 0,     0,      0,      0, 0]
            row 2: [ 0, 0,     0,      0,      0, 0]
            row 3: [ 0, 0, 1.9e5,      0,      0, 0]
            row 4: [ 0, 0,     0, 1.74e4,      0, 0]
            row 5: [ 0, 0,     0,      0, 4.67e6, 0]
            row 6: [ 0, 0,     0,      0,      0, 0]
      - model: quadratic damping
        damping matrix at the center of gravity projected in the body frame:
            frame: Anthineas
            row 1: [ 0, 0, 0,      0, 0, 0]
            row 2: [ 0, 0, 0,      0, 0, 0]
            row 3: [ 0, 0, 0,      0, 0, 0]
            row 4: [ 0, 0, 0, 1.45e6, 0, 0]
            row 5: [ 0, 0, 0,      0, 0, 0]
            row 6: [ 0, 0, 0,      0, 0, 0]
    controlled forces:
      - name: controller
        model: simple station-keeping controller
        ksi_x: 0.1
        T_x: {value: 40, unit: s}
        ksi_y: 0.05
        T_y: {value: 40, unit: s}
        ksi_psi: 0.2
        T_psi: {value: 2, unit: s}

output:
   - format: csv
     filename: run17.csv
     data: [t, z(Anthineas), phi(Anthineas), theta(Anthineas)]
