<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://git_simulateur@130.66.124.7/home/public/DOP/EtudesEnCours/ETI140043/simulator.git</url>
        <credentialsId>ff1eeca5-f706-43db-9832-beed196dcef7</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>dev</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/30 8-19 * * 1-5</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>git status &amp;&amp; git branch &amp;&amp; git fetch &amp;&amp; git checkout dev &amp;&amp; git pull origin dev</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Retrieve the external dependencies
cd code
./foreach.sh externalDependencies.txt svn_export.sh cec charles</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Configure
cd code &amp;&amp; mkdir -p build &amp;&amp; cd build &amp;&amp; cmake .. -G &quot;Unix Makefiles&quot; -DCMAKE_COLOR_MAKEFILE=OFF -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTING=OFF -Wno-dev</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Compile
cd code/build &amp;&amp;  make run_all_tests &amp;&amp; ./run_all_tests --gtest_output=xml:run_all_tests.xml &amp;&amp; python ../gcovr/gcovr -r ../.. --xml &gt; ../../code_coverage.xml</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Doc developer
cd code/build &amp;&amp; make doc_dev</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Package
cd code/build &amp;&amp; make package</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>git status &amp;&amp; git branch &amp;&amp; git checkout dev &amp;&amp; git fetch &amp;&amp; git checkout master &amp;&amp; git pull &amp;&amp; git merge dev &amp;&amp; git push -f origin master &amp;&amp; git checkout dev</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects>IrtJv_Simulator_Release</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.1">
      <testResults>code/build/run_all_tests.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
      <healthScaleFactor>1.0</healthScaleFactor>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.5">
      <coberturaReportFile>code_coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>true</failNoReports>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>7000000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>METHOD</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.plugins.doxygen.DoxygenArchiver plugin="doxygen@0.16">
      <doxyfilePath>code/build/Doxyfile</doxyfilePath>
      <keepAll>false</keepAll>
      <folderWhereYouRunDoxygen>doc_dev</folderWhereYouRunDoxygen>
    </hudson.plugins.doxygen.DoxygenArchiver>
    <hudson.tasks.Mailer plugin="mailer@1.11">
      <recipients>charles-edouard.cady@sirehna.com guillaume.jacquenot@sirehna.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers/>
</project>