stages:
  - git_submodule
  - lint
  - build
  - doc

git_submodule:
   stage: git_submodule
   script:
     - git submodule sync --recursive
     - git submodule update --init --recursive

lint:
   stage: lint
   script:
     - cd code &&
       if grep --recursive --include={*.cpp,*.c,*.hpp,*.h,*.md,*.yml,*.cmake.*.xml,*.html,*.in,*.txt}
               --exclude-dir={eigen,eigen3-hdf5,gcovr,gtest,gmock,google-test,yaml-cpp} -P "\t" . ;
       then echo "Tabs found in the lines shown above."; false;
       else echo "Repo passed no-tabs check."; fi &&
       cd ..

build:windows:
   stage: build
   before_script:
     - export GITLAB_PRIVATE_TOKEN=$GITLAB_PRIVATE_TOKEN
   script:
     - make windows
     - ./run_all_tests_windows.sh --gtest_filter=-HOS*:*erver*:*websocket*:BlockedDOFTest.should_not_throw_if_CSV_file_exists
     - mv build_windows/xdyn.zip .
   artifacts:
     when: on_success
     paths:
     - xdyn.zip

build:debian:
   stage: build
   before_script:
     - export GITLAB_PRIVATE_TOKEN=$GITLAB_PRIVATE_TOKEN
   script:
     - make debian
     - ./run_all_tests_debian.sh --gtest_filter=-HOS*
     - mv build_debian/xdyn.deb .
   artifacts:
     when: on_success
     paths:
     - xdyn.deb

doc:
   stage: doc
   script:
     - make doc
   artifacts:
     when: on_success
     paths:
     - doc.html

build:doc_pweave:
   stage: build
   script:
     - ls
     - cd doc_user
     - mkdir -p build_doc
     - cd build_doc
     - cp ../../xdyn.deb .
     - cp ../Dockerfile .
     - docker build . --tag pweave
     - cd ..
     - docker run --entrypoint /bin/sh pweave:latest -c "pwd && ls"
     - docker run --entrypoint /bin/sh --rm -v /etc/group:/etc/group:ro -v /etc/passwd:/etc/passwd:ro -u $( id -u $USER ):$( id -g $USER ) -v $(pwd):/build -w /build pweave:latest -c "pwd && ls && cat introduction.md interfaces.md reperes_et_conventions.md modeles_environnementaux.md calcul_de_GM.md courbes_de_GZ.md solver.md diffraction_radiation.md modeles_efforts.md tutorial_*.md > concatenated_doc.md && pweave -f markdown concatenated_doc.md -o doc.md && pandoc --title-prefix=XDYN --standalone --self-contained -t html --toc --toc-depth=3 --mathml --highlight-style pygments -f markdown -V lang=fr doc.md --css stylesheet.css -o doc.html"
     - ls concatenated_doc.md
     - ls doc.md
     - ls doc.html
     - mv doc.html ..
     - cd ..
   dependencies:
     - build:debian
   artifacts:
     when: on_success
     paths:
     - doc.html
